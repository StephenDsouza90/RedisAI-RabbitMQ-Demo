services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672" # management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      -  app-net

  redis:
    image: "redis:6"
    ports:
      - "6379:6379"
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G

  redisai:
    image: "redislabs/redisai:latest"
    platform: linux/amd64
    ports:
      - "6380:6379"  # Map host port 6380 â†’ container port 6379
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G

  ml:
    build:
      context: .
      dockerfile: ml/inference/Dockerfile.inference
    ports:
      - "5001:5001"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDISAI_HOST: redisai
      REDISAI_PORT: 6379
    volumes:
      - ./ml/data:/ml/data
    command: uvicorn --reload --host 0.0.0.0 --port 5001 --log-level "debug" ml.inference.app:app
    networks:
      -  app-net

  interface:
    build:
      context: .
      dockerfile: interface/Dockerfile.interface
    volumes:
      - ./data:/data
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQ_QUEUE: file_queue
      FILE_PATH: /data
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      -  app-net

  batch:
    build:
      context: .
      dockerfile: batch/Dockerfile.batch
    ports:
      - "5000:5000"
    volumes:
      - ./data:/data
    environment:
      PYTHONUNBUFFERED: 1
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_QUEUE: file_queue
      ML_HOST: ml
      ML_PORT: 5001
      FILE_PATH: /data
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      -  app-net

volumes:
  redis_data:

networks:
  app-net:
    driver: bridge