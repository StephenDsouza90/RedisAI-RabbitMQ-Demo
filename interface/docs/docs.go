// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/upload": {
            "post": {
                "description": "Accepts a file and sends its name to RabbitMQ",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Uploads a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/predict": {
            "post": {
                "description": "Accepts a JSON body with car details and predicts the price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prediction"
                ],
                "summary": "Predicts car price",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Car details for price prediction",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "brand": {
                                    "type": "string"
                                },
                                "year": {
                                    "type": "integer"
                                },
                                "engine_size": {
                                    "type": "number",
                                    "format": "float"
                                },
                                "fuel_type": {
                                    "type": "string"
                                },
                                "transmission": {
                                    "type": "string"
                                },
                                "mileage": {
                                    "type": "integer"
                                },
                                "condition": {
                                    "type": "string"
                                },
                                "model": {
                                    "type": "string"
                                }
                            },
                            "required": ["brand", "year", "engine_size", "fuel_type", "transmission", "mileage", "condition", "model"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "File Upload API",
	Description:      "A simple file upload API with RabbitMQ and Python worker",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
